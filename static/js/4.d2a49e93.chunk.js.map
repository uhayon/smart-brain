{"version":3,"sources":["components/ImageDetection/ImageLinkForm/ImageLinkForm.module.scss","components/ImageDetection/ImageLinkForm/ModelSelector/ModelSelector.js","components/ImageDetection/ImageLinkForm/ImageLinkForm.js","components/ImageDetection/Rank/Rank.js","components/ImageDetection/ImageContainer/ImageReferences/ImageReferences.js","components/ImageDetection/ImageContainer/ImageContainer.js","components/ImageDetection/ImageDetection.js","components/ImageDetection/ImageContainer/ImageReferences/ImageReferences.module.scss","components/ImageDetection/ImageContainer/ImageContainer.module.scss"],"names":["module","exports","form","formInput","formContainer","ModelSelector","_ref","onFormModelChange","selectedModel","models","react_default","a","createElement","name","id","className","onChange","value","map","model","i","key","text","ImageLinkForm","onFormInputChange","onImageSubmit","inputValue","concat","style","margin","ImageLinkForm_ModelSelector_ModelSelector","type","onClick","description","Rank","LoggedUserContext","_ref$userData","userData","fullname","entries","getBox","document","querySelector","ImageReferences","isSearching","references","console","log","minWidth","Spinner","_ref2","backgroundColor","referenceElement","onMouseOver","box","classList","add","boundingBoxHovered","highlightBox","onMouseOut","remove","unhighlightBox","data-reference","color","ImageContainer","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","resizeBoxes","setState","calculateBoundingBoxVertices","boundingBox","image","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","getReferenceListElement","highlightReference","liElement","hovered","unhighlightReference","state","window","addEventListener","removeEventListener","_this2","_this$props","container","trim","display","src","alt","boxStyles","_this2$calculateBound","top","right","bottom","left","onMouseEnter","onMouseLeave","ImageContainer_ImageReferences_ImageReferences","React","Component","Clarifai","CELEBRITY_MODEL","ImageDetection","event","input","target","selectedModelValue","setUserLogged","_this$state","imageUrl","fetch","method","headers","Content-Type","Authorization","localStorage","getItem","sessionStorage","body","JSON","stringify","detectionType","then","response","ok","json","Promise","reject","status","data","user","handleImageRecognition","catch","err","errorState","errorText","apiResponse","setReferences","getSelectedModel","find","_this$state2","ImageDetection_Rank_Rank","ImageDetection_ImageLinkForm_ImageLinkForm","fontSize","fontWeight","ImageDetection_ImageContainer_ImageContainer"],"mappings":"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","file":"static/js/4.d2a49e93.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ImageLinkForm_form__39jrh\",\"formInput\":\"ImageLinkForm_formInput__2eaPK\",\"formContainer\":\"ImageLinkForm_formContainer__1kd5A\"};","import React from 'react';\n\nconst ModelSelector = ({ onFormModelChange, selectedModel, models }) => {\n  return (\n    <select \n      name=\"modelSelector\" \n      id=\"model_selector\" \n      className='bg-light-purple white'\n      onChange={onFormModelChange}\n      value={selectedModel.value}>\n      {\n        models.map((model, i) => <option key={i} value={model.value}>{model.text}</option>)\n      }\n    </select>\n  )\n}\n\nexport default ModelSelector;","import React from 'react';\n\nimport ModelSelector from './ModelSelector/ModelSelector';\nimport { form, formInput, formContainer } from './ImageLinkForm.module.scss';\n\nconst ImageLinkForm = ({ onFormInputChange, onImageSubmit, inputValue, onFormModelChange, selectedModel, models }) => {\n  return (\n    <div>\n      <p className=\"f3 white\">\n        {'This Magic Brain will detect what you want in your pictures. Give it a try.'}\n      </p>\n      <div className='flex-justify-center center'>\n        <div className={`pa4 br3 shadow-5 flex-justify-center center column ${form}`}>\n          <div className={`${formContainer} center`} style={{margin: '0'}}>\n            <ModelSelector\n              onFormModelChange={onFormModelChange}\n              selectedModel={selectedModel}\n              models={models} />\n            <input \n              className={`${formInput} f4 pa2 w-70 flex-justify-center center input-reset ba b--white-10`} \n              type=\"text\" \n              onChange={onFormInputChange}\n              value={inputValue} />\n            <button \n              className=\"w-30 grow f4 link ph3 pv2 dib white bg-dark-gray b--white-10 bg-light-purple\" \n              onClick={onImageSubmit}>\n              Detect\n            </button>\n          </div>\n          <span className='white mt3 bg-black'>{selectedModel.description}</span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ImageLinkForm;","import React from 'react';\n\nimport { LoggedUserConsumer } from '../../../contexts/LoggedUserContext';\n\nconst Rank = () => {\n  return (\n    <LoggedUserConsumer>\n      {\n        ({ userData: { fullname, entries } }) => {\n          return (\n            <div>\n              <div className=\"white f3\">\n                {`${fullname}, your entries count is...`}\n              </div>\n              <div className=\"white f1\">\n                {entries}\n              </div>\n            </div>\n          )\n        }\n      }\n    </LoggedUserConsumer>\n  );\n}\n\nexport default Rank;","import React from 'react';\n\nimport { referenceElement } from './ImageReferences.module.scss';\nimport { boundingBoxHovered } from '../ImageContainer.module.scss';\n\nimport Spinner from '../../../SuspenseLoading/Spinner/Spinner';\n\nconst getBox = key => {\n  return document.querySelector(`[data-reference=\"${key}\"]`);\n}\n\nconst highlightBox = key => {\n  const box = getBox(key);\n  if (box) {\n    box.classList.add(boundingBoxHovered);\n  }\n}\n\nconst unhighlightBox = key => {\n  const box = getBox(key);\n  if (box) {\n    box.classList.remove(boundingBoxHovered);\n  }\n}\n\nconst ImageReferences = ({ isSearching, references, selectedModel: { value: selectedModel } }) => {\n  console.log(selectedModel)\n  return (\n    <div style={{minWidth: '25%'}}>\n      <ul className='list pl0'>\n        {\n          isSearching ?\n          <Spinner /> :\n          references.map(({ description, key }) =>\n            <li \n              style={\n                selectedModel === 'COLOR_MODEL' ?\n                {\n                  backgroundColor: key\n                } :\n                {}\n              }\n              className={`${referenceElement} pointer pa2 ttc`}\n              onMouseOver={() => highlightBox(key)}\n              onMouseOut={() => unhighlightBox(key)}\n              key={description}\n              data-reference={key} >\n              <span\n                style={\n                  selectedModel === 'COLOR_MODEL' ?\n                  {\n                    backgroundColor: 'rgba(0, 0, 0, .75)',\n                  color: '#fff'\n                  } :\n                  {}\n                }\n              >\n                {description}\n              </span>\n            </li>\n          )\n        }\n      </ul>\n    </div>\n  );\n};\n\nexport default ImageReferences;","import React from 'react';\n\nimport ImageReferences from './ImageReferences/ImageReferences';\nimport { boundingBox, container } from './ImageContainer.module.scss';\nimport { hovered } from './ImageReferences/ImageReferences.module.scss';\n\nclass ImageContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      resizeBoxes: false\n    }\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.resizeBoxes);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.resizeBoxes)\n  }\n\n  resizeBoxes = () => {\n    this.setState({resizeBoxes: true});\n  }\n\n  calculateBoundingBoxVertices = (boundingBox) => {\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n  \n    return {\n      leftCol: boundingBox.left_col * width,\n      topRow: boundingBox.top_row * height,\n      rightCol: width - (boundingBox.right_col * width),\n      bottomRow: height - (boundingBox.bottom_row * height)\n    };\n  }\n\n  getReferenceListElement = key => {\n    return document.querySelector(`li[data-reference=\"${key}\"]`)\n  }\n  \n  highlightReference = key => {\n    const liElement = this.getReferenceListElement(key);\n    if (liElement) {\n      liElement.classList.add(hovered);\n    }\n  }\n\n  unhighlightReference = key => {\n    const liElement = this.getReferenceListElement(key);\n    if (liElement) {\n      liElement.classList.remove(hovered);\n    }\n  }\n\n  render() {\n    const { image, references, selectedModel, isSearching } = this.props;\n    return (\n      <div className={`${container} ${image.trim() === '' ? 'dn' : 'flex'} justify-around center ma`}>\n        <div className=\"relative\">\n          <img \n            id='inputimage'\n            style={{display: `${image === '' ? 'none' : 'block'}`}} \n            src={image}\n            alt=\"Recognize\"\n            width='100%'\n            height='100%' />\n          {\n            references.map(({box, key}) => {\n              let boxStyles = {};\n              if (box) {\n                  const {topRow, bottomRow, leftCol, rightCol} = this.calculateBoundingBoxVertices(box);\n                  boxStyles = {top: topRow, right: rightCol, bottom: bottomRow, left: leftCol};\n              }\n              return (\n                <div \n                  data-reference={key} \n                  key={key} \n                  className={boundingBox} \n                  style={boxStyles}\n                  onMouseEnter={() => this.highlightReference(key)}\n                  onMouseLeave={() => this.unhighlightReference(key)} >\n                </div>\n              )\n            })\n          }\n        </div>\n        <ImageReferences \n          references={references}\n          selectedModel={selectedModel}\n          isSearching={isSearching} />\n      </div>\n    );\n  }\n}\n\n\nexport default ImageContainer;","import React from 'react';\nimport Clarifai from 'clarifai';\n\nimport ImageLinkForm from './ImageLinkForm/ImageLinkForm';\nimport Rank from './Rank/Rank';\nimport ImageContainer from './ImageContainer/ImageContainer';\nimport { LoggedUserConsumer } from '../../contexts/LoggedUserContext';\n\nimport models from '../../mockData/models.json';\n\nClarifai.CELEBRITY_MODEL = 'e466caa0619f444ab97497640cefc4dc';\n\nclass ImageDetection extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      selectedModelValue: models[0].value,\n      references: [],\n      isSearching: false,\n      errorState: false,\n      errorText: ''\n    };\n  }\n\n  onFormInputChange = (event) => {\n    this.setState({input: event.target.value})\n  }\n\n  onFormModelChange = (event) => {\n    this.setState({\n      selectedModelValue: event.target.value,\n      references: []\n    });\n  }\n\n  onImageSubmit = (id, setUserLogged) => {\n    const { selectedModelValue, input } = this.state;\n    this.setState({\n      imageUrl: input,\n      isSearching: true\n    }, () => {\n      fetch('http://localhost:3000/imageurl', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token') || sessionStorage.getItem('token')}`\n        },\n        body: JSON.stringify({\n          imageUrl: input,\n          detectionType: selectedModelValue\n        })\n      })\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n\n        return Promise.reject(response.status)\n      })\n      .then(data => {\n        if (data) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': `Bearer ${localStorage.getItem('token') || sessionStorage.getItem('token')}`\n            },\n            body: JSON.stringify({ id })\n          })\n          .then(response => response.json())\n          .then(user => setUserLogged(true, user));\n        }\n        this.handleImageRecognition(data);\n      })\n      .catch((err) => {\n        this.setState({\n          isSearching: false,\n          errorState: true,\n          errorText: err === 401 ? 'You are unauthorized to execute this operation. Plase log out and enter again with your credentials' : 'There was an error. Please try again in a moment'\n        }) \n      });\n    });\n  }\n\n  handleImageRecognition = apiResponse => {\n    this.setReferences(apiResponse);\n  }\n\n  setReferences = (references) => {\n    this.setState({\n      references,\n      isSearching: false\n    });\n  }\n\n  getSelectedModel = () => {\n    return models.find(model => model.value === this.state.selectedModelValue) || models[0];\n  }\n\n  render() {\n    const { input, imageUrl, references, isSearching, errorState, errorText } = this.state;\n    const selectedModel = this.getSelectedModel();\n\n    return (\n      <LoggedUserConsumer>\n        {\n          ({ userData: { id }, setUserLogged }) => {\n            return (\n              <div className='mt5'>\n                <Rank />\n                <ImageLinkForm \n                  onFormInputChange={this.onFormInputChange}\n                  inputValue={input}\n                  onImageSubmit={() => this.onImageSubmit(id, setUserLogged)}\n                  onFormModelChange={this.onFormModelChange}\n                  selectedModel={selectedModel}\n                  models={models} />\n                  {\n                    errorState ?\n                    <p style={{\n                      color: 'red',\n                      fontSize: '1.3rem',\n                      fontWeight: 'bold',\n                      backgroundColor: 'rgba(255, 255, 255, .75)'\n                    }}>{errorText}</p> :\n                    <ImageContainer \n                    image={imageUrl}\n                    references={references}\n                    selectedModel={selectedModel} \n                    isSearching={isSearching} />\n                  }\n              </div>\n            );\n          }\n        }\n      </LoggedUserConsumer>\n    )\n  }\n}\n\nexport default ImageDetection;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"referenceElement\":\"ImageReferences_referenceElement__Boi02\",\"hovered\":\"ImageReferences_hovered__3cwJ0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"boundingBox\":\"ImageContainer_boundingBox__3eLqc\",\"boundingBoxHovered\":\"ImageContainer_boundingBoxHovered__2PWcZ\",\"container\":\"ImageContainer_container__3FNX5\"};"],"sourceRoot":""}